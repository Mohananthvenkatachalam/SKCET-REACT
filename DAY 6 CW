
import React from 'react'
import ThemeProvider from './components/ThemeProvider'
import ThemeContext from './components/ThemeContext'
import ThemedComponent from './components/ThemedComponent'
function App() {
  return (
    <>
      <ThemeProvider>
        <ThemedComponent/>
      </ThemeProvider>
    </>
  )
}

export default App

import React, { useContext,useState } from 'react'
import ThemeContext from './ThemeContext'
const ThemedComponent = () => {
    const { theme, toggleTheme } = useContext(ThemeContext)
    return (
        <>    
         <h2 style={{ backgroundColor: theme === 'dark' ? '#000000' : '#ffffff' }}>
            hello world
        </h2>
            <button onClick={toggleTheme}>CLick here to change theme</button>
            {theme}
        </>
    )
}
export default ThemedComponent


import React, {useState} from "react";
import ThemeContext from "./ThemeContext";
const ThemeProvider = ({ children }) => {
    const [theme, setTheme] = useState('light');
    const toggleTheme = () => {
        setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'))
    };
    return (
        <ThemeContext.Provider value={{ theme, toggleTheme }} >
            {children}
        </ThemeContext.Provider >
    )
}
export default ThemeProvider


import { createContext } from "react";
const ThemeContext = createContext();
export default ThemeContext;




CSS



.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
